
import numpy as np


A = np.array([[3,-1,-1],[-1.,3.,1.],[2,1,4]])
b = np.array([1.,3.,7.])
x0 = np.array([0.,0.,0.])


def SOR(A,b,x0,w, tolerancia= 1e-8):
    
    x = x0.copy()
    paso = 0
    residuo = np.linalg.norm( np.dot(A,x) - b )
    
    while residuo > tolerancia:
        
        for i in range(A.shape[0]):
            
            sum1 = 0.
            
            for j in range(A.shape[1]):
                if j != i:
                
                    sum1 += A[i,j] * x[j]
            
            p1 = (1 - w) * x[i]
                          
            x[i] = p1 + ( w / A[i,i]) * (b[i] - sum1)
            
        residuo = np.linalg.norm( np.dot(A,x) - b )    
        paso += 1

        final = paso, x
        
    return final


omega= np.linspace(1, 2, 100)

finales= []

for w in omega:
    sor= w, SOR(A, b, x0, w)
    finales.append(sor)
    
minimo= finales[0][1][0]
pos = 0
relax= finales[0][0]
for l in range(len(finales)):
    iteracion= finales[l][1][0]
    if iteracion < minimo:
        minimo = iteracion
        pos= l
        relax= finales[pos][0]
        
print(relax, finales[pos][1])
