import numpy as np
import matplotlib.pyplot as plt


def Punto (A, b):
    At = np.transpose(A)
    AtA = np.dot(At, A)
    Atb = np.dot(At, b)
    x = np.linalg.solve(AtA, Atb)
    return x

A = np.array([[2,-1], [1,2], [1,1]])
b= np.array([2,1,4])

punto= Punto(A, b)

x_= np.linspace(0,10, 100)

y1_= 2*x_ -2
plt.plot(x_, y1_)

y2_ = (1 - x_)/2
plt.plot(x_, y2_)

y3_ = 4 - x_
plt.plot(x_, y3_)

plt.scatter(punto[0], punto[1])

# El punto representa la menor distancia existente entre las tres líneas. 
# Sería una especie de solución para un sistema que no tiene solución.

X = np.linspace(-5, 5, 10)
Y = np.linspace(-5, 5, 10)


fig = plt.figure()
ax = fig.add_subplot(projection='3d')

for x in X:
    for y in Y:
        v = np.array([x, y])
        d = np.dot(A, v) - b
        dis = np.linalg.norm(d)
        ax.scatter(x, y, dis)

z= np.linspace(0, 20, 100)
for j in range(100):
    ax.scatter(punto[0], punto[1], z[j], color= "black")


# Parece que la línea que marca el punto pasa por el punto más bajo de la superficie

