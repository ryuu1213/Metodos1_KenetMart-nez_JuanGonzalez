
import numpy as np


def BaseLagrange (x, xi, j):
    prod= 1
    n= len(xi)
    for i in range (n):
        if i != j:
            prod *= (x - xi[i]) / (xi[j] - xi[i])
    return prod

def Polinomio (x, xi, yi):
    suma = 0
    n = len(xi)
    for j in range(n):
        suma += yi[j] * BaseLagrange(x, xi, j)
    return suma
"""

def Derivada (x, p, xi, yi, h):
    derivada= 0
    n= len(x)
    for i in range(n):
        derivada += (1/2h) * (-3*p(x, xi, yi) + 4*p(x + h, xi, yi) - p(x + 2*h, xi, yi))
    return derivada
"""

X= np.linspace(0.1, 1.1, 10)
Y= np.array([np.tan(X)])
x= np.linspace(X[0], X[9], 9)

print(Polinomio(x, X, Y))
